version: '3'
services:
  app:
    build:
      context: .
    container_name: 'app'
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
    volumes:
      - ./src:/server/src
    tty: true
    ports:
      - "3333:3333"
    depends_on:
      - db
    command: npm run dev

    networks:
      - node-network
  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: 'db'
    restart: 'always'
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
    environment: 
      - MYSQL_DATABASE=mydatase
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - node-network
  
  redis:
    image: redis:latest
    container_name: redis
    # environment:
    #   - REDIS_PASSWORD=root
    #   - REDIS_USERNAME=root
    ports:
      - 6379:6379
    networks: 
      - node-network

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: rabbit
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=root
    networks:
      - node-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node
    volumes:
      - ./elasticsearch:/usr/share/elasticsearch/data
    networks:
      - node-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - node-network


networks: 
  node-network:
    driver: bridge
  